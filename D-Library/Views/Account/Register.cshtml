@model D_Library.Models.Model.RegisterModel
@using D_Library.Models.Repository

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Master.cshtml";
}

<section>
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, htmlAttributes: new { @class = "panel-info form-form form-form-outdasdboard form-Register", @style = "" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-heading text-center">ثبت نام</div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row panel-body form-body">

            <div class="col-md-6">
                <div class="form-group">

                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "" })
                    <div class="input-group">
                        <span class=" input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control text-center" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Family, htmlAttributes: new { @class = "" })
                    <div class="input-group">
                        <span class=" input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.Family, new { htmlAttributes = new { @class = "form-control text-center" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Family, "", new { @class = "text-danger" })
                </div>

                <div class="form-group ">
                    @Html.LabelFor(model => Model.Group, htmlAttributes: new { @class = "" })
                    @{
                        Rep_GroupBranch gp = new Rep_GroupBranch();

                        @Html.DropDownListFor(model => Model.Group, gp.Get_AllGroupSelectList(), htmlAttributes: new { @class = "form-control group Select2_Normal  text-center" });

                    }
                </div>

                <div class="form-group ">
                    @Html.LabelFor(model => Model.Branch, htmlAttributes: new { @class = "" })
                    @{
                        Rep_GroupBranch br = new Rep_GroupBranch();
                        @Html.DropDownListFor(model => Model.Branch, br.Get_AllBranchSelectList(), htmlAttributes: new { @class = "form-control branch Select2_Normal  text-center" });
                    }
                </div>


            </div>

            <div class="col-md-6">


                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "" })
                    <div class="input-group">
                        <span class=" input-group-addon"><i class="glyphicon glyphicon-phone"></i></span>
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control text-center" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "" })
                    <div class="input-group">
                        <span class=" input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control text-right" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
                    <div class="input-group">
                        <span class=" input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control text-center" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PasswordVerify, htmlAttributes: new { @class = "control-label " })
                    <div class="input-group">
                        <span class=" input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                        @Html.EditorFor(model => model.PasswordVerify, new { htmlAttributes = new { @class = "form-control text-center" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.PasswordVerify, "", new { @class = "text-danger" })
                </div>

            </div>

        </div>


        <button class="btn btn-success  AddNewUser-button" type="submit" name="btn-BuildCode" style="margin-bottom:50px;">تایید</button>



    }

</section>


<script>
    $(".group").on("change", function () {
        var GroupID = document.getElementById("Group").value;
        console.log(GroupID);
        $.ajax({
            url: "/User/Get_BranchList?GroupID=" + GroupID,
            dataType: 'json',
            type: 'post',
            success: function (data) {
                $(".branch").empty();
                $.each(data, function (index, row) {
                    $(".branch").append("<option value='" + row.id + "'>" + row.text + "</option>")
                });
            }
        })
    });

    $(".group").ready(function () {
        var GroupID = document.getElementById("Group").value;
        console.log(GroupID);
        $.ajax({
            url: "/User/Get_BranchList?GroupID=" + GroupID,
            dataType: 'json',
            type: 'post',
            success: function (data) {
                $(".branch").empty();
                $.each(data, function (index, row) {
                    $(".branch").append("<option value='" + row.id + "'>" + row.text + "</option>")
                });
            }
        })
    });

</script>